{
  "hash": "5c97b78cdfdafd230796ed820951bc74",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Grade Reflection\"\nformat: html\ndescription: \"Midterm reflection, up to week 5\"\nauthor:\n  - name: Lily Cook\ndate: 05-05-2025\ncategories: [Advanced R] # add cover with image: preview-image.png\ndraft: false \nexecute: \n  echo: true\n  warning: false\n---\n\n\n\n\n\n# Independent Learning (IL):\n\n*These objectives show your ability to seek out new information and adapt to new tools to solve data analysis problems.*\n\n## \\[IL-1\\] Adding new skills:\n\n-   I can find and adopt new packages to accomplish tasks.\n-   I can adapt to different syntax styles (tidy, base, formula style, data.table).\n\n\n\n\n\n\n\n### Level: 2\n\n### Justification:\n\n[Lab 2](../lab2/index.qmd): leaflet\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmappal <- colorNumeric('RdPu', domain = mergedmap$pctgroup)\nlabelpal <- colorFactor('RdPu', domain = mergedmap$grouplabel)\n\nleaflet(mergedmap) %>%\n  addTiles() %>%\n  addPolygons(\n    fillColor = ~ mappal(pctgroup),\n    weight = 1, fillOpacity = 0.7,\n    color = \"lightgray\",\n    label = ~ paste(name_long, \":\", percentlabel)) %>%\n  addLegend(\n    pal = labelpal, values = ~ grouplabel,  \n    title = \"People who say their children have been vaccinated\"\n  )\n```\n:::\n\n\n\nIn lab 2, I was introduced to the leaflet package for the first time. I was able to create an interactive map filled by colors using functions from the package `colorNumeric` and `colorFactor`. I demonstrated a solid understanding of creating maps, labelling them, and creating interactive features.\n\n[Lab 4](../lab4/index.qmd): (code seen on [GitHub](https://github.com/lilypcook/lab-4/blob/main/lab4.qmd))\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheckboxGroupInput(\"selected_regions\", \"Select Regions:\",\n                   choices = unique(percents$region),\n                   selected = unique(percents$region))\n\ncheckboxInput(\"show_median\", \"Show Region Medians\", value = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n output$avgcard <- renderText({\n  filtered_data <- percents %>%\n    filter(region %in% input$selected_regions)\n  \n  mean <- mean(filtered_data$pctagree)\n  \n  paste(round(mean * 100, 2), \"%\")\n})\n```\n:::\n\n\n\n\nIn lab 4, I was experience using Shiny for the first time. This was a completely new way of interacting with R for me, and I enjoyed being able to create apps. I feel I succeeded in learning this skill in a timely manner and implementing Shiny in a meaningful way.\n\n\n\n## \\[IL-2\\] Online resources:\n\n-   I can use online resources (e.g., Google, ChatGPT, StackOverflow, YouTube) to solve problems, debug, or find new tools.\n-   I can use tutorials, etc. to enhance my understanding of new concepts.\n-   I can find source code for similar projects to use as starting points for my own.\n\n\n\n\n\n\n\n### Level: 3\n\n### Justification:\n\n[Lab 2](../lab2/index.qmd):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleaflet(mergedmap) %>%\n .... %>%\n  addLegend(\n    pal = labelpal, values = ~ grouplabel,  \n    title = \"People who say their children have been vaccinated\"\n  )\n```\n:::\n\n\n\nLab 2 presented an issue with properly labeling the leaflet map. Since this was a new package for me, troubleshooting was difficult. So, I turned to ChatGPT to help fix the `addLegend` function, specifically the `pal` and `values` arguments. ChatGPT was successful and provided me with the lines of code pictured above.\n\n\n[Lab 3](../lab3/index.qmd): (code seen on [GitHub](https://github.com/lilypcook/lab-3/blob/main/lab3.qmd))\n\nLab 3 was a fun chance to play around with stylizing options, specifically themes and icons. I used online resources to help me with these steps and to determine what I wanted my dashboard to look like. Below are two resources I used:\n\n[Icons used in quick cards](https://icons.getbootstrap.com/)\n[Theming](https://quarto.org/docs/dashboards/theming.html)\n\nThis website: (code seen on [GitHub](https://github.com/lilypcook/lilypcook.github.io/blob/main/_quarto.yml))\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwebsite:\n    title: \"Lily Cook\"\n    navbar:\n     left:\n      - href: index.qmd\n        text: Home\n      - href: about.qmd\n        text: About\n      - href: BlogPosts.qmd \n        text: Blog\n     right:\n      - icon: github\n        href:  https://github.com/lilypcook/lab-3\n        aria-label: GitHub\n      - icon: linkedin\n        href: https://www.linkedin.com/in/lilypaintoncook/\n        aria-label: LinkedIn\n    favicon: \"media/flower-icon.jpg\"\n```\n:::\n\n\n\nWhen working on this website, I found that there was no icon on the browser tab when, and I did not like that, so I turned to the internet to help, and it was successful. [This](https://stackoverflow.com/questions/74165889/add-icon-to-browser-tab-in-quarto) post on Stack Overflow pointed me in the right direction.\n\n## IL Summary\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/IL-summary-graph-1.png){width=672}\n:::\n:::\n\n\n\n# Reproducible Workflow (RW):\n\n*These objectives show your ability to produce artifacts and deliverables that are organized, documented, version tracked, and responsibly designed.*\n\n## \\[RW-1\\] File, code, and data management:\n\n-   I can use Git and GitHub to track my progress (creating repos, cloning, forking, pull requesting).\n-   I always use R Projects and the {here} package to organize my scripts, notebooks, data, and applications.\n-   I always use pull requests when collaborating with others.\n\n\n\n\n\n\n\n### Level: 3\n\n### Justification:\n\nCreating repos\n\nThis website is hosted through github\n\n## \\[RW-2\\] Notebooks:\n\n-   I can use Quarto to produce a reproducible notebook and polished rendered documents\n-   I can use appropriate chunk options (echo, error, cache, etc.) to render my Quarto document quickly and cleanly.\n\n\n\n\n\n\n\n### Level: 3\n\n### Justification:\n\nLab 1: Stylizing document\n\nLab 3: Chunk options for creating dashboard\n\n## \\[RW-3\\] Code style\n\n-   My code is clear, readable, well-organized, and well-commented.\n\n\n\n\n\n\n\n### Level: 2\n\n### Justification\n\nLab 3 snippet of cleaning data\n\nNeed more comments - but label chunks and use logical naming conventions\n\n## RW Summary\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/RW-summary-graph-1.png){width=672}\n:::\n:::\n\n\n\n# Technical Communication (TC):\n\n*These objectives show your ability to communicate the processes you have implemented in your code, as well as the data conclusions and results.*\n\n## \\[TC-1\\] Project summaries:\n\n-   I can create clear and succinct summaries of a project.\n-   I accurately interpret statistical or modeling results.\n-   I consider the appropriate scope and impact of my project results.\n\n\n\n\n\n\n\n### Level: 3\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[TC-2\\] Documentation:\n\n-   I can create a user-friendly dashboard.\n-   I provide ample documentation for my custom functions.\n\n\n\n\n\n\n\n### Level: 3\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## TC Summary\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/TC-summary-graph-1.png){width=672}\n:::\n:::\n\n\n\n# Data Manipulation (DM):\n\n*These objectives relate to the collection, cleaning, processing, and preparing of datasets for analysis.*\n\n## \\[DM-1\\] Data Preparation\n\n-   I can read in datasets to R, including untidy ones.\n-   I can clean datasets to deal with missing data, typos, poor formatting, etc.\n\n\n\n\n\n\n\n### Level: 2\n\n### Justification:\n\nLab 2 data cleaning - read xlsx\n\nLab 4 preprocessing to help read time - read csv\n\n## \\[DM-2\\] Data Wrangling\n\n-   I can cleverly use pivoting, separating, grouping, and joining to wrangle data.\n-   I can use mapping (`purrr`) to perform repeated tasks.\n\n\n\n\n\n\n\n### Level: 2\n\n### Justification:\n\nLab 3: separate wider delim, group by and summarising, left join and casewhen\n\n## \\[DM-3\\] Data Formats\n\n-   I can use API urls to access JSON data and convert it into a data frame\n-   I can scrape data from the web and convert it into a data frame\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Fill in the line below with your self-assigned level for this objective.\nmy_level <- 1\n\nportfolio_levels <- portfolio_levels %>%\n  bind_rows(tibble(Objective = \"DM-3\", \n                   Level = my_level))\n```\n:::\n\n\n\n### Level: 1\n\n### Justification\n\nHave not completed relevant tasks yet\n\n## DM Summary\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/DM-summary-graph-1.png){width=672}\n:::\n:::\n\n\n\n# Professional Visualization (PV):\n\n## \\[PV-1\\] Clear & Accessible Visualizations\n\n-   I can make my plots more clear by removing the legend and adding annotations.\n-   I can edit the titles, subtitles, captions, axis labels, etc. to create a clearly labelled plot.\n-   I can choose colors (\"scales\") and themes to make a visually pleasing and accessible plot.\n\n\n\n\n\n\n\n### Level: 3\n\n### Justification:\n\nLab 3 dotplot\n\n## \\[PV-2\\] Dynamic Visualizations\n\n-   I can use a package like {gganimate} to create self-contained gifs.\n-   I can use a package like {plotly}, {ggplotly}, {leaflet}, {ggirafe}, etc. to make interactive html widgets.\n\n\n\n\n\n\n\n### Level: 2\n\n### Justification:\n\nleaflet in lab 3\n\n## \\[PV-3\\] Interactive Visualizations\n\n-   I can use Shiny or webR to create visualizations that react to a user's input.\n\n\n\n\n\n\n\n### Level: 3\n\n### Justification:\n\nShiny in lab 4\n\nimprovements could be made, but not in interactivity\n\nUse of check boxes and sliders to update a visualization, text box and table\n\n## PV Summary\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/PV-summary-graph-1.png){width=672}\n:::\n:::\n\n\n\n# Code Design, Algorithms, Iteration (CDAI):\n\n*These objectives ask you to design code-based approaches to statistical computing problems, usually involving iteration to a stopping condition.*\n\n## \\[CDAI-1\\] R Programming Language\n\n-   I understand non-standard evaluation (aka \"tidy eval\" or \"unquoted objects\"), and I can use tunneling in my functions.\n-   I understand functional programming, and I can use functions as objects in my code design.\n\n\n\n\n\n\n\n### Level: 1\n\n### Justification:\n\nHave not completed relevant tasks yet\n\n## \\[CDAI-2\\] Object Handling\n\n-   I have built in checks for possible input problems\n-   I can make reasonable choices in my code design about when to save intermediate objects.\n-   I can convert objects between types and structures as needed.\n\n\n\n\n\n\n\n### Level: 1\n\n### Justification:\n\nHave not completed relevant tasks yet\n\n## \\[CDAI-3\\] Speed and Efficiency\n\n-   I can recognize moments of possible slowdown in my code, and use built-in functions or parallelizing to speed them up.\n-   I always use and design vectorized functions whenever possible.\n\n\n\n\n\n\n\n### Level: 1\n\n### Justification:\n\nHave not completed relevant tasks yet\n\n## \\[CDAI-4\\] Supporting Functions\n\n-   I write helper / shortcut functions to streamline repeated tasks and make my code easier to read.\n-   I use intermediate functions to streamline repeated or looping processes.\n\n\n\n\n\n\n\n### Level: 1\n\n### Justification:\n\nHave not completed relevant tasks yet\n\n## \\[CDAI-5\\] Algorithmic Process\n\n-   I can invent and implement my own iterative algorithm.\n-   My loops are clean and efficient.\n-   I have built in checks for possible problems or extreme cases in the algorithm.\n\n\n\n\n\n\n\n### Level: 1\n\n### Justification:\n\nHave not completed relevant tasks yet\n\n## \\[CDAI-6\\] Generative Art\n\n-   I can apply a variety of generative art functions to make a visually pleasing piece.\n-   I can explain why particular changes to the code result in particular differences in the visualization.\n\n\n\n\n\n\n\n### Level: 1\n\n### Justification:\n\nHave not completed relevant tasks yet\n\n## CDAI Summary\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/CDAI-summary-graph-1.png){width=672}\n:::\n:::\n\n\n\n# Overall Summary\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/overall-summary-graph-1.png){width=672}\n:::\n:::\n\n\n\n## Grade\n\nBased on the summary plot above, I believe I have earned a \\_\\_\\_\\_ in STAT 541.\n\n### Justification\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}